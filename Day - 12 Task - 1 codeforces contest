// POTD #12 ► 12/01/2024
//Task 1️⃣ : [Karina and Array](https://codeforces.com/contest/1822/problem/B)
//Time complexity = O(N)
// Topic : ARRAY SORTING
// SOLUTION - 1
import java.util.*;
public class codeforces {
	    public static void main(String[] args) {
	      Scanner sc=new Scanner (System.in);
	      int t=sc.nextInt();
	      while(t>0)
	      {
	       int n=sc.nextInt();
	       long a[]=new long[n];
	       for(int i=0;i<n;i++)
	      {
	          a[i]=sc.nextInt();
	      }
	      Arrays.sort(a);
	      long max=((a[0]* a[1]) >= (a[n-1]*a[n-2]))?(a[0]* a[1]) :(a[n-1]*a[n-2]);
	      System.out.println( max);
	       t--;
	      }
	    }

}

/*
//SOLUTION - 2
//TIME COMPLEXITY = O(N3) NOT GOOD WORST CASE
 
import java.util.*;
public class codeforces {
	    public static void main(String[] args) {
	      Scanner sc=new Scanner (System.in);
	      int t=sc.nextInt();
	      while(t>0)
	      {
	       int n=sc.nextInt();
	       long a[]=new long[n];
	       for(int i=0;i<n;i++)
	      {
	          a[i]=sc.nextInt();
	      }
	      long max=a[0]*a[1];
	      for(int i=0;i<n-1;i++)
	      {
	          for(int j=i+1;j<n;j++)
	          if((a[i] * a[j] ) >= max )
	          max=(a[i] * a[j]);
	      }
	      System.out.println(max );
	       t--;
	      }
	    }
 
} 
*\

