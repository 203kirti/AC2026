//### POTD #29 ► 30/01/2024 
//Task 1️⃣ : [ Number of occurrence](https://www.geeksforgeeks.org/problems/number-of-occurrence2259/1)
//Time Complexity =  O(log(N));
//founded the first and last occurence then last-first +1;
class Solution {
    int count(int[] a, int n, int x) {
        int start=0,end=n-1,first=0,last=0;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(a[mid]==x){
                first=mid;
                end=mid-1;
            }
            else if(a[mid]<x){
                 start=mid+1; 
            }
            else{
                end=mid-1;
            }
        }
        if(a[first] != x)
        return 0;
        //System.out.println(first);
        last=start;
        end=n-1;
        start=start+1;
            while(start<=end){
            int mid=start+(end-start)/2;
            if(a[mid]==x){
                last=mid;
                start=mid+1;
            }
            else if(a[mid]<x){
                 start=mid+1; 
            }
            else{
                end=mid-1;
            }
        }
        //System.out.println(last);
        return ( last-first+1);
    }
}
